#!groovy
pipeline {
    agent any
    //环境变量
    tools {
        jdk 'jdk17'
        maven 'maven3.9.1'
    }

    //常量参数
    environment {
        cred_id = "github"
        git_project_url = "https://github.com/Alixhan/xh-admin-backend.git"
        project_name = "system/service"
        service_name = "xh-system-service"
        mirror_name = "${service_name}:latest"
        git_project_branch = "main"
        outer_port = "8000"
        inner_port = "8000"
        NACOS_SERVER_ADDR = "localhost:8848"
    }

    stages {
        stage("fetch code") {
            steps {
//                git credentialsId:cred_id, url:git_project_url, branch:git_project_branch
                git url: git_project_url, branch: git_project_branch
            }
        }
        stage("spring-boot:build-image") {
            steps {
                script {
                    def runScript = "mvn install && mvn spring-boot:build-image -f ${project_name}/pom.xml"
                    if (isUnix()) {
                        sh runScript
                    } else {
                        bat runScript
                    }
                }

            }
        }
        stage("deploy service") {
            steps {
                script {
                    // run脚本
                    def runScript = "docker run " +
                            " --restart always " +
                            " --name ${service_name} " +
                            " -p ${outer_port}:${inner_port} " +
                            " -e NACOS_SERVER_ADDR=\"${NACOS_SERVER_ADDR}\" " +
                            " -d ${mirror_name}"
                    if (isUnix()) {
                        //判断服务是否已存在
                        def out = sh script: 'docker ps -a | grep -w ${service_name}', returnStdout: true
                        if (out == '') {
                            echo '空的啊'
                        } else {
                            echo '不是空的啊啊啊啊'
                            bat "docker stop ${service_name}"
                            bat "docker rm ${service_name}"
                        }
                        sh runScript
                    } else {
                        def out = bat script: 'docker ps -a | find /i "${service_name}"', returnStdout: true
                        if (out.trim() == '') {
                            echo '空的啊'
                        } else {
                            echo '不是空的啊啊啊啊'
                            bat "docker stop ${service_name}"
                            bat "docker rm ${service_name}"
                        }
                        bat runScript
                    }
                }
            }
        }
    }
}
